<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>

    <scala.binary.version>2.12</scala.binary.version>
    <scala.version>${scala.binary.version}.8</scala.version>

    <hadoop.version>2.7.7</hadoop.version>
    <spark.version>2.4.5</spark.version>
    <spark.binary.version>2.4</spark.binary.version>
    <PermGen>512m</PermGen>
    <MaxPermGen>2g</MaxPermGen>
    <failsafe.version>2.18</failsafe.version>
  </properties>

  <groupId>com.tribbloids.scalaspike</groupId>
  <artifactId>scalaspike</artifactId>
  <version>1.0-SNAPSHOT</version>

  <profiles>
    <profile>
      <id>scala-2.11</id>
      <properties>

        <scala.binary.version>2.11</scala.binary.version>
        <scala.version>${scala.binary.version}.12</scala.version>

      </properties>
    </profile>
    <profile>
      <id>scala-2.13</id>
      <properties>

        <scala.binary.version>2.13</scala.binary.version>
        <scala.version>${scala.binary.version}.1</scala.version>

      </properties>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.chuusai/shapeless -->
    <dependency>
      <groupId>com.chuusai</groupId>
      <artifactId>shapeless_${scala.binary.version}</artifactId>
      <version>2.3.3</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <version>2.2.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.binary.version}</artifactId>
      <version>3.0.8</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--for unit test only-->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-yarn_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <outputDirectory>target/scala/classes</outputDirectory>
    <testOutputDirectory>target/scala/test-classes</testOutputDirectory>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <execution>
            <id>eclipse-add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-scaladocs</id>
            <phase>verify</phase>
            <goals>
              <goal>doc-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xms1024m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
            <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
            <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
          </jvmArgs>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
          <!--<compilerPlugins>-->
          <!--<compilerPlugin>-->
          <!--<groupId>org.scalamacros</groupId>-->
          <!--<artifactId>paradise_2.10.4</artifactId>-->
          <!--<version>2.0.1</version>-->
          <!--</compilerPlugin>-->
          <!--</compilerPlugins>-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.6</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <!--<autoReleaseAfterClose>true</autoReleaseAfterClose>-->
        </configuration>
      </plugin>
      <!--<plugin>-->
      <!--<groupId>com.github.klieber</groupId>-->
      <!--<artifactId>phantomjs-maven-plugin</artifactId>-->
      <!--<version>0.4</version>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<goals>-->
      <!--<goal>install</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--<configuration>-->
      <!--<version>1.9.8</version>-->
      <!--</configuration>-->
      <!--</plugin>-->
      <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-surefire-plugin</artifactId>-->
      <!--<version>2.17</version>-->
      <!--<configuration>-->
      <!--<systemPropertyVariables>-->
      <!--<phantomjs.binary>${phantomjs.binary}</phantomjs.binary>-->
      <!--</systemPropertyVariables>-->
      <!--</configuration>-->
      <!--</plugin>-->
    </plugins>
  </build>
</project>